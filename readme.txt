Desenvolvido por João Paulo de Souza e Leandro Souza Pinheiro

Esse software aborda o algoritmo meta-heurístico do simulated anneling. Ele foi implementado para a resolução do problema de alocação de turmas. Conhecido com student-class allocation problem. A estrutura de vizinhança implementada no algoritmo foi a troca ou swap, onde todos os elementos de uma linha ou coluna da matriz tem suas posições alteradas por outra. A solução trata de uma matriz na qual tem os horários de aula como linhas e as salas de aula como colunas e seus elementos são as turmas alocadas. A temperatura inicial utilizada nos testes foi de 1000 com temperatura final de 10 e alpha de 0.99. O número máximo de vizinhos explorados utilizado na maioria dos testes foi de 5. O testes foram feitos em cima de salas de aula com capacidades reais, baseados em salas de aula do IFMG campus Formiga. Os horários seguem o turnos matutino e vespertino(integral), onde cada horário representa 1 hora, iniciando a partir das 7 da manhã com um intervalo entre meio dia às 13h. As quantidades de alunos e de aulas foi gerados em condições reais das turmas de técnico em eletrônica, administração e informática; e bachareis em administração, engenharia elétrica e ciência da computação. Cada um desses cursos tem 4 possíveis turmas, representando cada ano de tais cursos. 
O algoritmo é executado a partir de um for triplo que gerencia as linhas(horários), colunas(salas) e as turmas. Sua avaliação pela função objetiva consiste em avaliar se faltou espaço para a turma alocada na sala ou se sobrou muito espaço. Então são inseridas penalidades quando algo do tipo acontece. Obviamente a penalidade para espaço sobrando na sala é bem menor que a penalidade para espaço faltando. No final o algoritmo deve indicar uma alocação possível com a menor penalidade entre as existentes.

O conjunto de dados utilizado contêm 14 salas, 10 horários e 6 cursos com 4 turmas cada, que totaliza 24 turmas.
Dentre os resultados de penalidade, o melhor obteve 1526.6, lembrando que esse problema é de minimização.
Junto da pasta do arquivo estão todas as imagens dos resultados e em seus nomes está o resultado obtido por cada uma das 100 iterações do algoritmo.
Infelizmente esse algoritmo não é estável, é possível notar facilmente que ele variou muito os resultados. No caso do problema, percebemos que o problema era um pouco complexo para uma atividade de poucos dias de prazo, é um problema que pode ser abordado em um tcc. Nós tivemos que reduzir a instância a um dia de aula para ficar plausível o desenvolvimento. Outro impecílio foi com certeza a linguagem R, nosso conhecimento na linguagem é raso e ela é diferente das linguagens já conhecidas por nós, por ter algumas limitações, que outras linguagens não possuem, no caso que notamos foi o problema em inserir agrupamento de dados em uma posição da matriz, isso realmente atrapalhou em obter uma resolução melhor do problema.